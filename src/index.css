@font-face {
  font-family: "SegoeUI";
  src: url("./assets/fonts/SegoeUI-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SegoeUI";
  src: url("./assets/fonts/SegoeUI.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

:root {
  --color-white: #ffffff;
  --color-black: #1a1a1a;
  --color-red: #ff3044;
  --color-blue: #2688eb;
  --color-dark-gray: #949494;
  --color-light-gray: #efefef;

  --text0: min(10vw, 58px);
  --text1: min(6vw, 34.8px);
  --text2: min(4vw, 23.2px);
  --text3: min(3vw, 17.4px);

  --margin1: min(4vw, 23.2px);
  --margin2: min(2vw, 11.6px);
  --margin3: min(14vw, 81.2px);

  --logo-size: min(15vw, 87px);
  --icon-size: min(8vw, 46.4px);

  --img-large: min(50vw, 290px);

  --card-button-border-radius: min(3vw, 17.4px);
  --card-button-padding-inline: min(9vw, 52.2px);
  --card-button-padding-block: min(3vw, 17.4px);
  --card-border-radius: min(6vw, 34.8px);
  --popup-border-radius: min(8vw, 46.4px);
}

/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
    Убираем внутренние отступы слева тегам списков,
    у которых есть атрибут class
   */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
    Убираем внешние отступы body и двум другим тегам,
    у которых есть атрибут class
   */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
    Убираем внешние отступы вертикали нужным тегам,
    у которых есть атрибут class
   */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
    Убираем стандартный маркер маркированному списку,
    у которого есть атрибут class
   */
:where(ul[class]) {
  list-style: none;
}

/**
    Обнуляем вертикальные внешние отступы параграфа,
    объявляем локальную переменную для внешнего отступа вниз,
    чтобы избежать взаимодействие с более сложным селектором
   */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
    Внешний отступ вниз для параграфа без атрибута class,
    который расположен не последним среди своих соседних элементов
   */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
    Упрощаем работу с изображениями
   */
img {
  display: block;
  max-width: 100%;
}

/**
    Наследуем свойства шрифт для полей ввода
   */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
  /**
      Плавный скролл
     */
  scroll-behavior: smooth;
}

body {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  min-height: 100%;
  /**
      Унифицированный интерлиньяж
     */
  line-height: 1.5;
}

/**
    Приводим к единому цвету svg-элементы
   */
svg *[fill] {
  fill: currentColor;
}
svg *[stroke] {
  stroke: currentColor;
}

/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами
   */
svg * {
  transition-property: fill, stroke;
}

/**
    Удаляем все анимации и переходы для людей,
    которые предпочитают их не использовать
   */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
